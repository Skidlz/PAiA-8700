                        ;POLY 1.0
                        ;written by John S. Simonton, Jr.
                        ;(c) 1978 PAiA Electronics, Inc.
                        ;All rights reserved.
                        
ff00 =                  DECODE	= $FF00 ;PIEBUG function
                        
09f7 =                  SH		= $09F7	;QuASH
0900 =                  DAC		= $0900 ;8780/8781 DAC
0810 =                  KBD		= $0810 ;8782 or EK-3 Keyboard
0820 =                  DISP	= $0820 ;hex display
                        
00d0 =                  KTABLE	= $D0	;input buffer D0-D7
00d8 =                  NTABLE 	= $D8	;output buffer D8-DF
00e0 =                  TTABLE	= $E0	;transpose table E0-E7
                        
00e8 =                  CLK		= $E8
00e9 =                  TEMP1	= $E9
00ea =                  OUTS	= $EA 	;number of synth chans (max 8)
00eb =                  OUTTEMP	= $EB
                        
0006 =                  	org $0006
                        ;
                        ;INIT clears input buffer KTABLE, OUTPUT
                        ;buffer NTABLE and traspose BUFFER
                        ;TTABLE
                        ;
0006 : a900             INIT	lda #$00		;prepare
0008 : a218             INIT1	ldx #$18
000a : 95cf             INIT0	sta KTABLE-1,x	;clear everything
000c : ca               		dex
000d : d0fb             		bne INIT0		;loop until done
                        		
                        ;
                        ;NOTEOUT adds together corresponding
                        ;entries in TTABLE and NTABLE and
                        ;reads the result into the control channels
                        ;in descending order.  Also takes care
                        ;of timing to D/A
                        ;
000f : a208             NOTEOUT	ldx #$08		;initialize pointer
0011 : b5d7             LOOP	lda NTABLE-1,x	;get note
0013 : 18               		clc				;prepare
0014 : 75df             		adc TTABLE-1,x	;add transpose
0016 : 8d0009           		sta DAC			;write to D/A, settle
0019 : 9df709           		sta SH,x 		;write control channel
001c : a004             		ldy #$04		;prepare delay time
001e : 88               LOOP1	dey				;delay
001f : d0fd             		bne LOOP1
0021 : ca               		dex				;done?
0022 : d0ed             		bne LOOP		;no, continue
                        ;
                        ;LOOK clears input buffer and waits for
                        ;keyboard scan to begin.  Places keys down
                        ;in the input buffer.  This routine Also
                        ;serves to make the keyboard's encoder
                        ;clock the tempo clock for the entire
                        ;system.
                        ;
0024 : a208             LOOK	ldx #$08		;set pointer/counter
0026 : a900             		lda #$00		;prepare accum.
0028 : 95cf             LK0		sta KTABLE-1,x	;zero input buffer
002a : ca               		dex				;point to next
002b : d0fb             		bne LK0			;done?  no-loop
002d : a208             		ldx #$08		;yes set pointer
002f : 2c1008           LK1		bit KBD			;scan started?
0032 : 30fb             		bmi LK1			;no D7 high, loop
0034 : 2c1008           LK2		bit KBD			;yes-look again
0037 : 300f             		bmi LOUT		;when scan done, leave
0039 : 50f9             		bvc LK2			;if key not down, loop
003b : ad1008           		lda KBD			;get the key
003e : 95cf             		sta KTABLE-1,x	;put it in input buffer
0040 : cd1008           LK3		cmp KBD			;still same key?
0043 : f0fb             		beq LK3			;yes,loop
0045 : ca               		dex				;advance pointer
0046 : d0ec             		bne LK2			;if some buffer left, loop
0048 : e6e8             LOUT	inc	CLK			;increment clock
004a : a5e8             		lda CLK			;get it
004c : 8d2008           		sta DISP		;show it
004f : ea               		nop				;hook
0050 : ea               		nop
0051 : ea               		nop
                        ;
                        ;POLY first half of allocation algorythm
                        ;as explained in text.  In this block de-
                        ;activated channels are re-activate if the
                        ;data they contain appears in the INPUT
                        ;buffer.
                        ;
0052 : a5ea             POLY	lda OUTS		;number of output
0054 : 85eb             		sta OUTTEMP		;channels to counter
0056 : a208             		ldx #$08		;set up a counter
0058 : a9bf             LOOPY0	lda #$BF		;prepare for following:
005a : 35d7             		and NTABLE-1,x	;clear trigger bit of note
005c : 95d7             		sta NTABLE-1,x	;and put it back
005e : ca               		dex				;pointer to next note
005f : d0f7             		bne LOOPY0		;if not yet done, loop
0061 : a909             		lda #$09		;prepare
0063 : 85e9             		sta TEMP1		;set up pointer to
                        						;KTABLE
0065 : c6e9             LOOPY1	dec TEMP1		;decrement the pointer
0067 : f023             		beq NEWKEY		;if done go to newkey
0069 : a6e9             		ldx	TEMP1		;prepare x pointer
006b : b4cf             		ldy KTABLE-1,x	;get key in Y register
006d : f01d             		beq NEWKEY		;no keys left, place new
                        						;keys
006f : a209             		ldx #$09		;initialize pointer to
                        						;NTABLE
0071 : ca               LOOPY2	dex				;decrement pointer
0072 : f0f1             		beq LOOPY1		;if all NTABLE done,
                        						;get new key
0074 : 98               		tya				;copy of next ket to ac.
0075 : 55d7             		eor NTABLE-1,x	;compare to NTABLE
0077 : 0a               		asl a			;and shift high order
0078 : 0a               		asl a			;bits out to ignore
0079 : d0f6             		bne LOOPY2		;if diff., get next NTABLE
007b : 98               		tya				;if same, key to ac.
007c : 15d7             		ora NTABLE-1,x	;and preserve glide
007e : 95d7             		sta NTABLE-1,x	;and save note
0080 : c6eb             		dec OUTTEMP		;one less output available
0082 : f031             		beq OUT			;if none remain, leave
0084 : a6e9             		ldx TEMP1
0086 : a900             		lda #$00		;prepare accumulator
0088 : 95cf             		sta KTABLE-1,x	;(and then zero this key
008a : f0d9             		beq LOOPY1		;then branch always
                        						;for more
                        ;
                        ;KEWKEY second half of allocation algorhythm.
                        ;Keys down are allocated to output BUFFER
                        ;locations wich are currently de-activated.
                        ;NOTE that both this routine and POLY
                        ;preserve the status of D7 in the OUTPUT
                        ;buffer locations.
                        ;
008c : a900             NEWKEY	lda #$00		;prepare accum.
008e : a209             		ldx #$09		;prepare pointer
0090 : ca               NK3		dex				;to KTABLE, decrement
0091 : f022             		beq OUT			;if done, leave
0093 : b4cf             		ldy KTABLE-1,x	;key to Y-reg.
0095 : f0f9             		beq NK3			;if key zero, get next key
0097 : 95cf             		sta KTABLE-1,x	;a key that needs a
                        						;home
                        						;zero the key in KTABLE
0099 : a209             		ldx #$09		;prepare pointer
009b : ca               NK4		dex				;decrement
009c : f017             		beq OUT			;if zero, no NTABLE
                        						;left
009e : a940             		lda #$40		;otherwise prepare a
                        						;mask
00a0 : 35d7             		and NTABLE-1,x	;and check for free
                        						;NTABLE entry (D6 0)
00a2 : d0f7             		bne NK4			;not this one
00a4 : a980             		lda #$80		;yes-now prepare a mask
00a6 : 35d7             		and NTABLE-1,x	;D7 set on clear
00a8 : 95d7             		sta NTABLE-1,x	;put back in NTABLE
00aa : 98               		tya				;copy key to accum,
00ab : 15d7             		ora NTABLE-1,x	;set/clear D7
00ad : 95d7             		sta NTABLE-1,x	;and back to NTABLE
00af : c6eb             		dec OUTTEMP		;one less output avail-
                        						;able
00b1 : f002             		beq OUT			;if none remaining, out.
00b3 : d0d7             		bne NEWKEY		;otherwise, branch always
                        						;for more
                        ;
                        ;OPTION uses PIEBUG's DECODE sub-
                        ;routine to read computer keyboard and
                        ;take appropriate action as required.
                        ;
00b5 :                  OUT
00b5 : 2000ff           OPTION	jsr DECODE 		;get command
00b8 : c904             		cmp #$04		;greater than 4?
00ba : b003             		bcs OP1			;yes test next
00bc : 4c0600           		jmp INIT		;no-clear all
00bf : c908             OP1		cmp #$08		;greater than 8?
00c1 : b005             		bcs OP2			;yes test next
00c3 : a92e             		lda #$2E		;no prepare
00c5 : 4c0800           		jmp INIT1		;go to tune
00c8 : 4c0f00           OP2		jmp NOTEOUT		;run full poly

-------------------------------- Symbol Table --------------------------------

              Symbol   Value        Decimal

                 CLK : $00e8            232   *
                 DAC : $0900           2304   *
              DECODE : $ff00          65280   *
                DISP : $0820           2080   *
                INIT : $0006              6
               INIT0 : $000a             10
               INIT1 : $0008              8
                 KBD : $0810           2064   *
              KTABLE : $00d0            208   *
                 LK0 : $0028             40
                 LK1 : $002f             47
                 LK2 : $0034             52
                 LK3 : $0040             64
                LOOK : $0024             36
                LOOP : $0011             17
              LOOPY0 : $0058             88
              LOOPY1 : $0065            101
              LOOPY2 : $0071            113
               LOOP1 : $001e             30
                LOUT : $0048             72
              NEWKEY : $008c            140
                 NK3 : $0090            144
                 NK4 : $009b            155
             NOTEOUT : $000f             15
              NTABLE : $00d8            216   *
              OPTION : $00b5            181
                 OP1 : $00bf            191
                 OP2 : $00c8            200
                 OUT : $00b5            181
                OUTS : $00ea            234   *
             OUTTEMP : $00eb            235   *
                POLY : $0052             82
                  SH : $09f7           2551   *
               TEMP1 : $00e9            233   *
              TTABLE : $00e0            224   *
			  